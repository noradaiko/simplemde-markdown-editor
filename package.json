{
  "name": "simplemde",
  "version": "1.8.1",
  "description": "A simple, beautiful, and embeddable JavaScript Markdown editor. Features autosaving and spell checking.",
  "keywords": [
    "embeddable",
    "markdown",
    "editor",
    "javascript",
    "wysiwyg"
  ],
  "homepage": "https://github.com/NextStepWebs/simplemde-markdown-editor",
  "main": "./src/js/simplemde.js",
  "license": "MIT",
  "company": "Next Step Webs, Inc.",
  "author": {
    "name": "Wes Cossick",
    "url": "http://www.WesCossick.com"
  },
  "bugs": {
    "url": "https://github.com/NextStepWebs/simplemde-markdown-editor/issues"
  },
  "dependencies": {
    "codemirror": "codemirror/codemirror",
    "event-kit": "^2.0.0",
    "highlight.js": "^8.9.1",
    "markdown-it": "^5.0.2",
    "underscore": "^1.8.3"
  },
  "devDependencies": {
    "browserify": "^11.2.0",
    "browserify-shim": "^3.8.10",
    "debug": "^2.2.0",
    "eslint": "^1.6.0",
    "gulp": "*",
    "gulp-concat": "*",
    "gulp-debug": "^2.1.1",
    "gulp-eslint": "^1.0.0",
    "gulp-header": "*",
    "gulp-jsbeautifier": "*",
    "gulp-minify-css": "^1.2.1",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "*",
    "gulp-watch": "^4.3.5",
    "vinyl-source-stream": "^1.1.0"
  },
  "browserify": {
    "transform": [
      "browserify-shim"
    ]
  },
  "browserify-shim": {
    "spell-checker": {
      "depends": [
        "typo:Typo",
        "codemirror:CodeMirror"
      ]
    },
    "typo": {
      "exports": "Typo"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NextStepWebs/simplemde-markdown-editor.git"
  },
  "gitHead": "5cde43f2b802deb668ffc0d76195607f1bfcee73",
  "readme": "# SimpleMDE - Markdown Editor\nA drop-in JavaScript textarea replacement for writing beautiful and understandable Markdown. The WYSIWYG-esque editor allows users who may be less experienced with Markdown to use familiar toolbar buttons and shortcuts. In addition, the syntax is rendered while editing to clearly show the expected result. Headings are larger, emphasized words are italicized, links are underlined, etc. SimpleMDE is one of the first editors to feature both built-in autosaving and spell checking.\n\n[**Demo**](http://nextstepwebs.github.io/simplemde-markdown-editor)\n\n[![Preview](http://i.imgur.com/zqWfJwO.png)](http://nextstepwebs.github.io/simplemde-markdown-editor)\n\n## Why not a WYSIWYG editor or pure Markdown?\nWYSIWYG editors that produce HTML are often complex and buggy. Markdown solves this problem in many ways, plus Markdown can be rendered natively on more platforms than HTML. However, Markdown is not a syntax that an average user will be familiar with, nor is it visually clear while editing. In otherwords, for an unfamiliar user, the syntax they write will make little sense until they click the preview button. SimpleMDE has been designed to bridge this gap for non-technical users who are less familiar with or just learning Markdown syntax.\n\n## Install\n\nVia [npm](https://www.npmjs.com/package/simplemde).\n```\nnpm install simplemde --save\n```\n\nVia [bower](https://www.bower.io).\n```\nbower install simplemde --save\n```\n\nVia [jsDelivr](http://www.jsdelivr.com/#!simplemde). *Please note, jsDelivr may take a few days to update to the latest release.*\n\n```HTML\n<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\">\n<script src=\"//cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\"></script>\n```\n\n## Quick start\n\nAfter installing, load SimpleMDE on the first textarea on a page\n\n```HTML\n<script>\nvar simplemde = new SimpleMDE();\n</script>\n```\n\n#### Using a specific textarea\n\nPure JavaScript method\n\n```HTML\n<script>\nvar simplemde = new SimpleMDE({ element: document.getElementById(\"MyID\") });\n</script>\n```\n\njQuery method\n\n```HTML\n<script>\nvar simplemde = new SimpleMDE({ element: $(\"#MyID\")[0] });\n</script>\n```\n\n## Get/set the content\n\n```JavaScript\nsimplemde.value();\n```\n\n```JavaScript\nsimplemde.value(\"This text will appear in the editor\");\n```\n\n## Configuration\n\n- **autoDownloadFontAwesome**: If set to `true`, force downloads Font Awesome (used for icons). If set to false, prevents downloading. Defaults to `undefined`, which will intelligently check whether Font Awesome has already been included, then download accordingly.\n- **autofocus**: If set to `true`, autofocuses the editor. Defaults to `false`.\n- **autosave**: *Saves the text that's being written and will load it back in the future. It will forget the text when the form it's contained in is submitted.*\n  - **enabled**: If set to `true`, autosave the text. Defaults to `false`.\n  - **delay**: Delay between saves, in milliseconds. Defaults to `10000` (10s).\n  - **unique_id**: You must set a unique string identifier so that SimpleMDE can autosave. Something that separates this from other instances of SimpleMDE elsewhere on your website.\n- **element**: The DOM element for the textarea to use. Defaults to the first textarea on the page.\n- **hideIcons**: An array of icon names to hide. Can be used to hide specific icons without completely customizing the toolbar.\n- **indentWithTabs**: If set to `false`, indent using spaces instead of tabs. Defaults to `true`.\n- **initialValue**: If set, will customize the initial value of the editor.\n- **insertTexts**: Customize how certain buttons that insert text behave. Takes an array with two elements. The first element will be the text inserted before the cursor or highlight, and the second element will be inserted after. For example, this is the default link value: `[\"[\", \"](http://)\"]`.\n  - horizontalRule\n  - image\n  - link\n- **lineWrapping**: If set to `false`, disable line wrapping. Defaults to `true`.\n- **parsingConfig**: Adjust settings for parsing the Markdown during editing (not previewing).\n  - **allowAtxHeaderWithoutSpace**: If set to `true`, will render headers without a space after the `#`. Defaults to `false`.\n  - **strikethrough**: If set to `false`, will not process GFM strikethrough syntax. Defaults to `true`.\n  - **underscoresBreakWords**: If set to `true`, let underscores be a delimiter for separating words. Defaults to `false`.\n- **previewRender**: Custom function for parsing the plaintext Markdown and returning HTML. Used when user previews.\n- **renderingConfig**: Adjust settings for parsing the Markdown during previewing (not editing).\n  - **singleLineBreaks**: If set to `false`, disable parsing GFM single line breaks. Defaults to `true`.\n  - **codeSyntaxHighlighting**: If set to `true`, will highlight using [highlight.js](https://github.com/isagalaev/highlight.js). Defaults to `false`. To use this feature you must include highlight.js on your page. For example, include the script and the CSS files like:<br>`<script src=\"https://cdn.jsdelivr.net/highlight.js/latest/highlight.min.js\"></script>`<br>`<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/highlight.js/latest/styles/github.min.css\">`\n- **spellChecker**: If set to `false`, disable the spell checker. Defaults to `true`.\n- **status**: If set to `false`, hide the status bar. Defaults to `true`.\n  - Optionally, you can set an array of status bar elements to include, and in what order.\n- **tabSize**: If set, customize the tab size. Defaults to `2`.\n- **toolbar**: If set to `false`, hide the toolbar. Defaults to the [array of icons](#toolbar-icons).\n- **toolbarTips**: If set to `false`, disable toolbar button tips. Defaults to `true`.\n\n```JavaScript\n// Most options demonstrate the non-default behavior\nvar simplemde = new SimpleMDE({\n\tautofocus: true,\n\tautosave: {\n\t\tenabled: true,\n\t\tunique_id: \"MyUniqueID\",\n\t\tdelay: 1000,\n\t},\n\telement: document.getElementById(\"MyID\"),\n\thideIcons: [\"guide\", \"heading\"],\n\tindentWithTabs: false,\n\tinitialValue: \"Hello world!\",\n\tinsertTexts: {\n\t\thorizontalRule: [\"\", \"\\n\\n-----\\n\\n\"],\n\t\timage: [\"![](http://\", \")\"],\n\t\tlink: [\"[\", \"](http://)\"],\n\t},\n\tlineWrapping: false,\n\tparsingConfig: {\n\t\tallowAtxHeaderWithoutSpace: true,\n\t\tstrikethrough: false,\n\t\tunderscoresBreakWords: true,\n\t},\n\tpreviewRender: function(plainText) {\n\t\treturn customMarkdownParser(plainText); // Returns HTML from a custom parser\n\t},\n\tpreviewRender: function(plainText, preview) { // Async method\n\t\tsetTimeout(function(){\n\t\t\tpreview.innerHTML = customMarkdownParser(plainText);\n\t\t}, 250);\n\t\t\n\t\treturn \"Loading...\";\n\t},\n\trenderingConfig: {\n\t\tsingleLineBreaks: false,\n\t\tcodeSyntaxHighlighting: true,\n\t},\n\tspellChecker: false,\n\tstatus: false,\n\tstatus: [\"autosave\", \"lines\", \"words\", \"cursor\"], // Optional usage\n\ttabSize: 4,\n\ttoolbar: false,\n\ttoolbarTips: false,\n});\n```\n\n#### Toolbar icons\n\nBelow are the built-in toolbar icons (only some of which are enabled by default), which can be reorganized however you like. \"Name\" is the name of the icon, referenced in the JS. \"Action\" is either a function or a URL to open. \"Class\" is the class given to the icon. \"Tooltip\" is the small tooltip that appears via the `title=\"\"` attribute. Any `Ctrl` or `Alt` in the title tags will be converted automatically to their Mac equivalents when needed. Additionally, you can add a separator between any icons by adding `\"|\"` to the toolbar array.\n\nName | Action | Tooltip<br>Class\n:--- | :----- | :--------------\nbold | toggleBold | Bold (Ctrl+B)<br>fa fa-bold\nitalic | toggleItalic | Italic (Ctrl+I)<br>fa fa-italic\nstrikethrough | toggleStrikethrough | Strikethrough<br>fa fa-strikethrough\nheading | toggleHeadingSmaller | Heading (Ctrl+H)<br>fa fa-header\nheading-smaller | toggleHeadingSmaller | Smaller Heading (Ctrl+H)<br>fa fa-header\nheading-bigger | toggleHeadingBigger | Bigger Heading (Shift+Ctrl+H)<br>fa fa-lg fa-header\nheading-1 | toggleHeading1 | Big Heading<br>fa fa-header fa-header-x fa-header-1\nheading-2 | toggleHeading2 | Medium Heading<br>fa fa-header fa-header-x fa-header-2\nheading-3 | toggleHeading3 | Small Heading<br>fa fa-header fa-header-x fa-header-3\ncode | toggleCodeBlock | Code (Ctrl+Alt+C)<br>fa fa-code\nquote | toggleBlockquote | Quote (Ctrl+')<br>fa fa-quote-left\nunordered-list | toggleUnorderedList | Generic List (Ctrl+L)<br>fa fa-list-ul\nordered-list | toggleOrderedList | Numbered List (Ctrl+Alt+L)<br>fa fa-list-ol\nlink | drawLink | Create Link (Ctrl+K)<br>fa fa-link\nimage | drawImage | Insert Image (Ctrl+Alt+I)<br>fa fa-picture-o\nhorizontal-rule | drawHorizontalRule | Insert Horizontal Line<br>fa fa-minus\npreview | togglePreview | Toggle Preview (Ctrl+P)<br>fa fa-eye no-disable\nside-by-side | toggleSideBySide | Toggle Side by Side (F9)<br>fa fa-columns no-disable no-mobile\nfullscreen | toggleFullScreen | Toggle Fullscreen (F11)<br>fa fa-arrows-alt no-disable no-mobile\nguide | [This link](http://nextstepwebs.github.io/simplemde-markdown-editor/markdown-guide) | Markdown Guide<br>fa fa-question-circle\n\nCustomize the toolbar using the `toolbar` option like:\n\n```JavaScript\n// Customize only the order of existing buttons\nvar simplemde = new SimpleMDE({\n\ttoolbar: [\"bold\", \"italic\", \"heading\", \"|\", \"quote\"],\n});\n\n// Customize all information and/or add your own icons\nvar simplemde = new SimpleMDE({\n\ttoolbar: [{\n\t\t\tname: \"bold\",\n\t\t\taction: SimpleMDE.toggleBold,\n\t\t\tclassName: \"fa fa-bold\",\n\t\t\ttitle: \"Bold (Ctrl+B)\",\n\t\t},\n\t\t\"|\", // Separator\n\t\t...\n\t],\n});\n```\n\n#### Height\n\nTo change the minimum height (before it starts auto-growing):\n\n```CSS\n.CodeMirror, .CodeMirror-scroll {\n\tmin-height: 200px;\n}\n```\n\nOr, you can keep the height static:\n\n```CSS\n.CodeMirror {\n\theight: 300px;\n}\n```\n\n## Event handling\nYou can catch the following list of events: https://codemirror.net/doc/manual.html#events\n\n```JavaScript\nvar simplemde = new SimpleMDE();\nsimplemde.codemirror.on(\"change\", function(){\n\tconsole.log(simplemde.value());\n});\n```\n\n## State methods\nThe following methods will let you check on the state of the editor.\n\n```js\nvar simplemde = new SimpleMDE();\nsimplemde.isPreviewActive();\nsimplemde.isSideBySideActive();\nsimplemde.isFullscreenActive();\n```\n\n## How it works\nSimpleMDE is an improvement of [lepture's Editor project](https://github.com/lepture/editor) and includes a great many number of changes. It is bundled with [CodeMirror](https://github.com/codemirror/codemirror) and depends on [Font Awesome](http://fortawesome.github.io/Font-Awesome/).\n\nCodeMirror is the backbone of the project and parses much of the Markdown syntax as it's being written. This allows us to add styles to the Markdown that's being written. Additionally, a toolbar and status bar have been added to the top and bottom, respectively. Previews are rendered by [Marked](https://github.com/chjj/marked) using GFM.\n\n## What's changed?\nAs mentioned earlier, SimpleMDE is an improvement of [lepture's Editor project](https://github.com/lepture/editor). So you might be wondering, what's changed? Quite a bit actually. Here's some notable changes:\n\n- Upgraded from CodeMirror 3 to CodeMirror 5\n- Many changes to the style, appearance, and user friendliness\n- Interface more closely resembles Bootstrap\n- Now mobile friendly\n- Option to autosave the text as you type\n- Now spell checks what you write\n- The text editor now automatically grows as you type more\n- Fixed a large amount of bugs\n- Switched to Font Awesome icons\n- Improved preview rendering in many ways\n- Improved as-you-type appearance of headers and code blocks\n- Simplified the toolbar\n- Many new options during instantiation\n- New icons and tooltips\n- Additional keyboard shortcuts\n",
  "readmeFilename": "README.md",
  "_id": "simplemde@1.8.1",
  "_shasum": "d0abd85177344b11edac47b23f495749100bc902",
  "_from": "noradaiko/simplemde-markdown-editor",
  "_resolved": "git://github.com/noradaiko/simplemde-markdown-editor.git#5cde43f2b802deb668ffc0d76195607f1bfcee73"
}
